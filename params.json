{"body":"## What is that for?\r\nThat object is made for sending clientside errors or messages to some server(s).\r\n\r\nImplemented two ways of logging an error or a message:\r\n* to google analytics account and\r\n* to some server via generic image.\r\n\r\nThat can happen simultaneously.\r\n\r\nThis javascript code is meant to be included somewhere in the head of the document before any other javascript is loaded and run to properly log errors while loading other scripts.\r\nIt does not have to be saved to some *.js-file because an error can occur while loading that file.\r\nThis peace of code has to be inserted by server side on every page where logging is needed.\r\n\r\n## Initialization\r\nThis object **must be initialized** and you have to provide initialization object to init method like that:\r\n```javascript\r\n(function()\r\n{\r\n\tLogger.init({\r\n\t\tsendErrorsToServer: '/index.html?action=log_client_error',\r\n\t\tsendErrorsToGA: true,\r\n\t\tsendMessagesToServer: '/index.html?action=log_client_message',\r\n\t\tsendMessagesToGA: true\r\n\t});\r\n}());\r\n```\r\nYou can provide one to four parameters:\r\n- to send errors and messages to server - **sendErrorsToServer** and **sendMessagesToServer** respectively (a string - url for sending logs)\r\n- to send errors and messages to google analytics account - **sendErrorsToGA** and **sendMessagesToGA** respectively (boolean).\r\n\r\nAny parameter can be omitted.\r\n\r\n## Usage examples\r\n\r\n### Logging a message\r\n```javascript\r\nLogger.sendMessage('just message to log');\r\n```\r\n\r\n### Error logging\r\n\r\n* in catch statement\r\n\t```javascript\r\n\ttry {\r\n\t\tthrow new Error('throwing an error with message');\r\n\t}\r\n\tcatch (e) {\r\n\t\tLogger.sendError(e);\r\n\t}\r\n\t```\r\n\r\n* by hand, when we just think it's an error for any reason\r\n\t```javascript\r\n\tLogger.sendError('error message by hand');\r\n\t```\r\n\r\n* uncaught errors are sent to server too (trythis code to get undefined property)\r\n\t```javascript\r\n\twindow.str.t;\r\n\t```\r\n\r\n\r\n## What needs to be done on the other side\r\n### Receiving errors on server side\r\nneeds some serverside language (Node, Python, PHP, Ruby or something else) to log it into a database or to a file.\r\n\r\n\r\n### For viewing errors and messages in your Google Analytics account\r\nyou need to proceed to **Standard Reporting** &rarr; **Content** &rarr; **Events** &rarr; **Overview** &rarr; **Custom Javascript Message**(**Custom Javascript Error**).\r\n\r\nAnd of course Google Analytics must be enabled with a standard code like that (it's better to do it after initializing **Logger**):\r\n```javascript\r\nvar _gaq = _gaq || [];\r\n_gaq.push(['_setAccount', 'UA-XXX']);\r\n_gaq.push(['_trackPageview']);\r\n\r\n(function() {\r\n    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;\r\n    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';\r\n    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);\r\n})();\r\n```\r\n","google":"","tagline":"Logger for errors and messages from clientside to a server.","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Js-logger"}